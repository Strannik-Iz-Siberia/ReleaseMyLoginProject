<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="buttonCircle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="8 0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="#878787" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#c4c4c4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="mainButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0 20 0 0" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{DynamicResource BackBut}" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="{DynamicResource BorderBut}" Padding="15" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource butover}" />
                <Setter Property="Foreground" Value="{DynamicResource forbut}" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="{DynamicResource butCaptured}" />
                <Setter Property="Foreground" Value="{DynamicResource forbut}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="White" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e8e8e8" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- Primary Colors -->
    <SolidColorBrush x:Key="PrimaryBlueColor" Color="#496FFF"/>
    <SolidColorBrush x:Key="PrimaryGrayColor" Color="#64677A"/>

    <!-- Secundary Colors -->
    <SolidColorBrush x:Key="SecundaryBlueColor" Color="#496FFF"/>
    <SolidColorBrush x:Key="SecundaryGrayColor" Color="#CECECE"/>

    <!-- Tertiary Colors -->
    <SolidColorBrush x:Key="TertiaryBlueColor" Color="#C2D1FC"/>

    <!-- BorderBrush Colors -->
    <SolidColorBrush x:Key="BorderBrushColor" Color="#233DC7"/>

    <!-- Text Colors -->
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ProTextColor" Color="#FFFFFF"/>

    <!-- Emoji Border Colors -->
    <SolidColorBrush x:Key="PrimaryBlueEmojiColor" Color="#9FB1F9" Opacity=".5"/>
    <SolidColorBrush x:Key="PrimaryEmojiColor" Color="#32323A" Opacity=".5"/>

    <!-- Button Colors -->
    <SolidColorBrush x:Key="ProButtonColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ButtonTextColor" Color="#14181D"/>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource  Title}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                         Background="{TemplateBinding Background}"
                         CornerRadius="7"
                         Height="14"
                         Width="35"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center">
                            <!-- Optional -->
                            <!--<Border.Effect>
                         <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                     </Border.Effect>-->
                        </Border>
                        <Ellipse x:Name="Ellipse"
                              Height="20"
                              Width="20"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                              Fill="{DynamicResource PrimaryTextColor}"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="3">
                            <!-- Optional -->
                            <!--<Ellipse.Effect>
                         <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                     </Ellipse.Effect>-->
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- EventTrigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                     Storyboard.TargetProperty="Margin"
                                                     To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- EventTrigger UnChecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                 To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                     Storyboard.TargetProperty="Margin"
                                                     To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                             Property="Fill"
                             Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                            Property="Stroke"
                            Value="{DynamicResource BorderBrushColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>